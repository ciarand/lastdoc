local c = require "header"

describe("the heading parsing stuff", function()
    describe("the headerNode func", function()
        it("should return a table with the passed in title field", function()
            assert.is.same({title = "title"}, c.headerNode("title"))
        end)
    end)

    describe("the parseNode func", function()
        it("should parse a doc with a normal header", function()
            assert.is.same(c.parseHeaderNode("title\n====="), c.headerNode("title"))
        end)
        it("should parse a doc with a normal header - 1", function()
            assert.is.same(c.parseHeaderNode("title\n===="), c.headerNode("title"))
        end)
        it("should parse a doc with a normal header - 2", function()
            assert.is.same(c.parseHeaderNode("title\n==="), c.headerNode("title"))
        end)
        it("should parse a doc with a normal header + 1", function()
            assert.is.same(c.parseHeaderNode("title\n======"), c.headerNode("title"))
        end)
        it("should parse a doc with a normal header + 2", function()
            assert.is.same(c.parseHeaderNode("title\n======="), c.headerNode("title"))
        end)

        -- not implemented yet
        pending("should not parse a doc with a normal header - 3", function()
            assert.is_not.same(c.parseHeaderNode("title\n=="), c.headerNode("title"))
        end)
        pending("should not parse a doc with a normal header + 3", function()
            assert.is_not.same(c.parseHeaderNode("title\n========"), c.headerNode("title"))
        end)
    end)
end)
